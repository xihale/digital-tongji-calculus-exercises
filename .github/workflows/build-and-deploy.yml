name: Build and Deploy

on:
  push:
    branches:
      - master
    paths-ignore:
      - 'README.md'
      - 'LICENSE'
      - '.gitignore'

permissions:
  contents: write
  pages: write
  id-token: write

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Install Typst
        run: |
          curl -fsSL https://github.com/typst/typst/releases/download/v0.13.1/typst-x86_64-unknown-linux-musl.tar.xz -o typst.tar.xz
          tar -xf typst.tar.xz
          sudo mv typst-x86_64-unknown-linux-musl/typst /usr/local/bin/
          typst --version
      
      - name: Auto-increment version if .typ files changed
        id: version
        run: |
          # Configure git
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          
          # Check if any .typ files were modified in the recent commits
          TYP_CHANGES=$(git diff --name-only HEAD~1 HEAD | grep -c '\.typ$' || echo "0")
          
          # Extract current version
          CURRENT_VERSION=$(grep -oP '#let VERSION = "\K[^"]+' index.typ)
          echo "Current version: $CURRENT_VERSION"
          
          if [ "$TYP_CHANGES" -gt 0 ]; then
            echo "Detected $TYP_CHANGES .typ file(s) changed, auto-incrementing version..."
            
            # Parse version (e.g., v0.0.3 -> 0.0.3)
            VERSION_NUM=$(echo "$CURRENT_VERSION" | sed 's/^v//')
            
            # Split version into parts
            MAJOR=$(echo "$VERSION_NUM" | cut -d. -f1)
            MINOR=$(echo "$VERSION_NUM" | cut -d. -f2)
            PATCH=$(echo "$VERSION_NUM" | cut -d. -f3)
            
            # Increment patch version
            PATCH=$((PATCH + 1))
            
            # Create new version
            NEW_VERSION="v${MAJOR}.${MINOR}.${PATCH}"
            echo "New version: $NEW_VERSION"
            
            # Update version in index.typ
            sed -i "s/#let VERSION = \"$CURRENT_VERSION\"/#let VERSION = \"$NEW_VERSION\"/" index.typ
            
            # Commit the version change
            git add index.typ
            git commit -m "chore: auto-increment version to $NEW_VERSION [skip ci]"
            git push origin master
            
            VERSION="$NEW_VERSION"
          else
            echo "No .typ files changed, keeping current version: $CURRENT_VERSION"
            VERSION="$CURRENT_VERSION"
          fi
          
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "Final version: $VERSION"
      
      - name: Build PDFs
        run: |
          # Build PDF without answers
          typst compile --font-path fonts/ index.typ index.pdf
          
          # Build PDF with answers
          typst compile --font-path fonts/ --input SHOW_ANSWER=true index.typ index_ans.pdf
          
          # Verify files were created
          ls -lh *.pdf
          
          # Save PDFs to a temporary location
          mkdir -p /tmp/pdfs
          cp index.pdf index_ans.pdf /tmp/pdfs/
      
      - name: Fetch web branch
        run: |
          git fetch origin web
          git checkout web
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
      
      - name: Update index.html version
        run: |
          VERSION="${{ steps.version.outputs.version }}"
          sed -i "s/<span class=\"version-value\" id=\"version\">v[0-9.]*</<span class=\"version-value\" id=\"version\">$VERSION</g" index.html
          
          # Verify the change
          grep "version-value" index.html
      
      - name: Copy PDFs to web branch
        run: |
          cp /tmp/pdfs/*.pdf .
      
      - name: Commit and push to web branch
        run: |
          git add index.html index.pdf index_ans.pdf
          
          # Only commit if there are changes
          if git diff --staged --quiet; then
            echo "No changes to commit"
          else
            git commit -m "Auto-update: version ${{ steps.version.outputs.version }} [skip ci]"
            git push origin web
          fi
      
      - name: Switch back to master for release
        run: |
          git checkout master
      
      - name: Restore PDFs for release
        run: |
          cp /tmp/pdfs/*.pdf .
      
      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.version.outputs.version }}
          name: Release ${{ steps.version.outputs.version }}
          body: |
            ## 高等数学习题册（上册）${{ steps.version.outputs.version }}
            
            自动构建和发布
            
            ### 下载
            - 📖 index.pdf (无答案版)
            - 📖 index_ans.pdf (带答案版)
            
            ### 在线预览
            访问：https://dtce.xihale.top
          files: |
            index.pdf
            index_ans.pdf
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
